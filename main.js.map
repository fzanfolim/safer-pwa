{"version":3,"sources":["./src/app/app.component.html","./src/app/components/footer/footer.component.html","./src/app/components/navbar/navbar.component.html","./src/app/components/sidebar/sidebar.component.html","./src/app/layouts/admin-layout/admin-layout.component.html","./src/app/layouts/full-layout/full-layout.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/components/components.module.ts","./src/app/components/footer/footer.component.css","./src/app/components/footer/footer.component.ts","./src/app/components/navbar/navbar.component.css","./src/app/components/navbar/navbar.component.ts","./src/app/components/sidebar/sidebar.component.css","./src/app/components/sidebar/sidebar.component.ts","./src/app/layouts/admin-layout/admin-layout.component.scss","./src/app/layouts/admin-layout/admin-layout.component.ts","./src/app/layouts/full-layout/full-layout.component.scss","./src/app/layouts/full-layout/full-layout.component.ts","./src/app/providers/auth/auth-guard.service.ts","./src/app/providers/auth/auth.service.ts","./src/app/providers/default/default.ts","./src/app/providers/local-storage/jwt-token.ts","./src/app/providers/local-storage/local-storage.ts","./src/app/providers/notification/notification.ts","./src/app/providers/remote-service/remote-service-cargo.ts","./src/app/providers/remote-service/remote-service-empresa.ts","./src/app/providers/remote-service/remote-service-funcionarios.ts","./src/app/providers/remote-service/remote-service-perfil.ts","./src/app/providers/remote-service/remote-service-tipo-sanguinio.ts","./src/app/providers/remote-service/remote-service-treinamento.ts","./src/app/providers/remote-service/remote-service-unidade.ts","./src/app/providers/remote-service/remote-service-users.ts","./src/app/providers/remote-service/remote-service.ts","./src/app/providers/remote-service/routes.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<ngx-loading-bar color=\\\"#fa8d00\\\"></ngx-loading-bar>\\n<router-outlet></router-outlet>\\n\"","export default \"<footer class=\\\"footer \\\">\\n    <div class=\\\"container-fluid\\\">\\n        <nav class=\\\"pull-left\\\">\\n            <ul>\\n                <li>\\n                    <a href=\\\"https://www.creative-tim.com\\\">\\n                        Creative Tim\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"https://creative-tim.com/about-us\\\">\\n                        About Us\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"http://blog.creative-tim.com\\\">\\n                        Blog\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"https://www.creative-tim.com/license\\\">\\n                        Licenses\\n                    </a>\\n                </li>\\n            </ul>\\n        </nav>\\n        <div class=\\\"copyright pull-right\\\">\\n            &copy;\\n            {{test | date: 'yyyy'}}, made with love by\\n            <a href=\\\"https://www.creative-tim.com\\\" target=\\\"_blank\\\">Creative Tim</a> for a better web.\\n        </div>\\n    </div>\\n</footer>\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-transparent  navbar-absolute fixed-top\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-wrapper\\\">\\n          <a class=\\\"navbar-brand\\\" href=\\\"javascript:void(0)\\\">{{getTitle()}}</a>\\n        </div>\\n        <button mat-raised-button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"sidebarToggle()\\\">\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\n            <span class=\\\"navbar-toggler-icon icon-bar\\\"></span>\\n            <span class=\\\"navbar-toggler-icon icon-bar\\\"></span>\\n            <span class=\\\"navbar-toggler-icon icon-bar\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navigation\\\">\\n            <!-- <form class=\\\"navbar-form\\\">\\n                <div class=\\\"input-group no-border\\\">\\n                    <input type=\\\"text\\\" value=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n                    <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\n                        <i class=\\\"material-icons\\\">search</i>\\n                        <div class=\\\"ripple-container\\\"></div>\\n                    </button>\\n                </div>\\n            </form> -->\\n            <ul class=\\\"navbar-nav\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\">\\n                        <i class=\\\"material-icons\\\">dashboard</i>\\n                        <p>\\n                            <span class=\\\"d-lg-none d-md-block\\\">Stats</span>\\n                        </p>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item dropdown\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                        <i class=\\\"material-icons\\\">notifications</i>\\n                        <span class=\\\"notification\\\">5</span>\\n                        <p>\\n                            <span class=\\\"d-lg-none d-md-block\\\">Some Actions</span>\\n                        </p>\\n                    </a>\\n                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n                        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Mike John responded to your email</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">You have 5 new tasks</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">You're now friend with Andrew</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Another Notification</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\">Another One</a>\\n                    </div>\\n                </li>\\n                <li class=\\\"nav-item dropdown\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                        <i class=\\\"material-icons\\\">person</i>\\n                        <p>\\n                            <span class=\\\"d-lg-none d-md-block\\\">Some Actions</span>\\n                        </p>\\n                    </a>\\n                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n                        <a class=\\\"dropdown-item \\\" href=\\\"javascript:void(0)\\\" (click)=\\\"sair()\\\">Sair</a>\\n                       \\n                    </div>\\n                </li>\\n      \\n            </ul>\\n        </div>\\n    </div>\\n</nav>\\n\\n<!--\\n\\n<nav class=\\\"navbar navbar-transparent navbar-absolute\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button mat-raised-button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" (click)=\\\"sidebarToggle()\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" href=\\\"javascript:void(0)\\\">{{getTitle()}}</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse\\\">\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li>\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                        <i class=\\\"material-icons\\\">dashboard</i>\\n                        <p class=\\\"hidden-lg hidden-md\\\">Dashboard</p>\\n                    </a>\\n                </li>\\n                <li class=\\\"dropdown\\\">\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                        <i class=\\\"material-icons\\\">notifications</i>\\n                        <span class=\\\"notification\\\">5</span>\\n                        <p class=\\\"hidden-lg hidden-md\\\">Notifications</p>\\n                    </a>\\n                    <ul class=\\\"dropdown-menu\\\">\\n                        <li><a href=\\\"javascript:void(0)\\\">Mike John responded to your email</a></li>\\n                        <li><a href=\\\"javascript:void(0)\\\">You have 5 new tasks</a></li>\\n                        <li><a href=\\\"javascript:void(0)\\\">You're now friend with Andrew</a></li>\\n                        <li><a href=\\\"javascript:void(0)\\\">Another Notification</a></li>\\n                        <li><a href=\\\"javascript:void(0)\\\">Another One</a></li>\\n                    </ul>\\n                </li>\\n                <li>\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                       <i class=\\\"material-icons\\\">person</i>\\n                       <p class=\\\"hidden-lg hidden-md\\\">Profile</p>\\n                    </a>\\n                </li>\\n            </ul>\\n\\n            <form class=\\\"navbar-form navbar-right\\\" role=\\\"search\\\">\\n                <div class=\\\"form-group form-black is-empty\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n                    <span class=\\\"material-input\\\"></span>\\n                </div>\\n                <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\n                    <i class=\\\"material-icons\\\">search</i><div class=\\\"ripple-container\\\"></div>\\n                </button>\\n            </form>\\n        </div>\\n    </div>\\n</nav> -->\\n\"","export default \"<div class=\\\"logo\\\">\\n    <a href=\\\"https://www.creative-tim.com\\\" class=\\\"simple-text\\\">\\n        <div class=\\\"logo-img\\\" style=\\\"width:150px; height: 49px; max-height: 49px;\\\">\\n            <!-- <img src=\\\"/assets/img/angular2-logo-red.png\\\"/> -->\\n            <img src=\\\"/assets/img/safer-logo.png\\\" style=\\\"width:60px;\\\"/>\\n        </div>\\n        \\n    </a>\\n</div>\\n<div class=\\\"sidebar-wrapper\\\">\\n  <div *ngIf=\\\"isMobileMenu()\\\">\\n    <form class=\\\"navbar-form\\\">\\n      <span class=\\\"bmd-form-group\\\">\\n        <div class=\\\"input-group no-border\\\">\\n          <input type=\\\"text\\\" value=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\n            <i class=\\\"material-icons\\\">search</i>\\n            <div class=\\\"ripple-container\\\"></div>\\n          </button>\\n        </div>\\n      </span>\\n    </form>\\n    <ul class=\\\"nav navbar-nav nav-mobile-menu\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\">\\n                <i class=\\\"material-icons\\\">dashboard</i>\\n                <p>\\n                    <span class=\\\"d-lg-none d-md-block\\\">Stats</span>\\n                </p>\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                <i class=\\\"material-icons\\\">notifications</i>\\n                <span class=\\\"notification\\\">5</span>\\n                <p>\\n                    <span class=\\\"d-lg-none d-md-block\\\">Some Actions</span>\\n                </p>\\n            </a>\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Mike John responded to your email</a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">You have 5 new tasks</a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">You're now friend with Andrew</a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another Notification</a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another One</a>\\n            </div>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\">\\n                <i class=\\\"material-icons\\\">person</i>\\n                <p>\\n                    <span class=\\\"d-lg-none d-md-block\\\">Account</span>\\n                </p>\\n            </a>\\n        </li>\\n    </ul>\\n  </div>\\n    <ul class=\\\"nav\\\">\\n        <li routerLinkActive=\\\"active\\\" *ngFor=\\\"let menuItem of menuItems\\\" class=\\\"{{menuItem.class}} nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"[menuItem.path]\\\">\\n                <i class=\\\"material-icons\\\">{{menuItem.icon}}</i>\\n                <p>{{menuItem.title}}</p>\\n            </a>\\n        </li>\\n    </ul>\\n</div>\\n\"","export default \"<div class=\\\"wrapper\\\">\\n    <div class=\\\"sidebar\\\" data-color=\\\"orange\\\" data-background-color=\\\"white\\\" data-image=\\\"./assets/img/sidebar-3.jpg\\\">\\n        <app-sidebar></app-sidebar>\\n        <div class=\\\"sidebar-background\\\" style=\\\"background-image: url(./assets/img/sidebar-4.jpg)\\\"></div>\\n    </div>\\n    <div class=\\\"main-panel\\\">\\n        <app-navbar></app-navbar>\\n        <router-outlet></router-outlet>\\n        <div *ngIf=\\\"isMaps('maps')\\\">\\n            <app-footer></app-footer>\\n        </div>\\n    </div>\\n    <!-- <div class=\\\"fixed-plugin\\\">\\n        <div class=\\\"dropdown show-dropdown open show\\\">\\n            <a href=\\\"#\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"true\\\">\\n                <i class=\\\"fa fa-cog fa-2x\\\"> </i>\\n            </a>\\n            <ul class=\\\"dropdown-menu show\\\" x-placement=\\\"bottom-start\\\" style=\\\"position: absolute; top: 41px; left: -231px; will-change: top, left;\\\">\\n                <li class=\\\"header-title\\\"> Sidebar Filters</li>\\n                <li class=\\\"adjustments-line\\\">\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"switch-trigger active-color\\\">\\n                        <div class=\\\"ml-auto mr-auto\\\">\\n                            <span class=\\\"badge filter badge-purple\\\" data-color=\\\"purple\\\"></span>\\n                            <span class=\\\"badge filter badge-azure\\\" data-color=\\\"azure\\\"></span>\\n                            <span class=\\\"badge filter badge-green\\\" data-color=\\\"green\\\"></span>\\n                            <span class=\\\"badge filter badge-orange \\\" data-color=\\\"orange\\\"></span>\\n                            <span class=\\\"badge filter badge-danger active\\\" data-color=\\\"danger\\\"></span>\\n                        </div>\\n                        <div class=\\\"clearfix\\\"></div>\\n                    <div class=\\\"ripple-container\\\"></div></a>\\n                </li>\\n                <li class=\\\"header-title\\\">Images</li>\\n                <li>\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\n                        <img src=\\\"./assets/img/sidebar-1.jpg\\\" alt=\\\"\\\">\\n                    </a>\\n                </li>\\n                <li>\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\n                        <img src=\\\"./assets/img/sidebar-2.jpg\\\" alt=\\\"\\\">\\n                    <div class=\\\"ripple-container\\\"></div></a>\\n                </li>\\n                <li>\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\n                        <img src=\\\"./assets/img/sidebar-3.jpg\\\" alt=\\\"\\\">\\n                    </a>\\n                </li>\\n                <li class=\\\"active\\\">\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\n                        <img src=\\\"./assets/img/sidebar-4.jpg\\\" alt=\\\"\\\">\\n                    </a>\\n                </li>\\n                <li class=\\\"button-container\\\">\\n                    <div>\\n                        <button class=\\\"btn btn-info btn-block btn-fill\\\" data-toggle=\\\"modal\\\" data-target=\\\"#buy\\\">\\n                            Download Free\\n                        </button>\\n                    </div>\\n                </li>\\n                <li class=\\\"button-container\\\">\\n                    <div>\\n                        <button class=\\\"btn btn-warning btn-block btn-fill\\\" data-toggle=\\\"modal\\\" data-target=\\\"#buy\\\">\\n                            Buy Pro\\n                        </button>\\n                    </div>\\n                </li>\\n                <li class=\\\"button-container text-center\\\" routerLinkActive=\\\"active\\\">\\n                  <div>\\n                    <a class=\\\"btn btn-default btn-block\\\" href=\\\"https://demos.creative-tim.com/material-dashboard-angular2/#/documentation/tutorial\\\">\\n                        View Documentation\\n                    </a>\\n                  </div>\\n                </li>\\n            </ul>\\n        </div>\\n    </div> -->\\n</div>\\n<!-- Buy-Modal-angular -->\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"buy\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\n<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-body text-center\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n            <h4 class=\\\"margin-top\\\">\\n                Free Version\\n            </h4>\\n            <div class=\\\"separator\\\"></div>\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\n                <div class=\\\"wrapper-card\\\">\\n                    <div class=\\\"image-container\\\">\\n                        <img src=\\\"./assets/img/html.png\\\" alt=\\\"unloaded\\\">\\n                    </div>\\n                    Html5\\n                    <div class=\\\"separator\\\"></div>\\n                    <div class=\\\"product-type\\\">\\n                        FREE\\n                    </div>\\n                </div>\\n            </a>\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard-angular2\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\n                <div class=\\\"wrapper-card\\\">\\n                    <div class=\\\"image-container image-angular-cli\\\">\\n                        <img src=\\\"./assets/img/angular.png\\\" alt=\\\"unloaded\\\">\\n                    </div>\\n                    Angular\\n                    <div class=\\\"separator\\\"></div>\\n                    <div class=\\\"product-type\\\">\\n                        FREE\\n                    </div>\\n                </div>\\n            </a>\\n            <h4>\\n                PRO Version\\n            </h4>\\n            <div class=\\\"separator\\\"></div>\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard-pro\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\n                <div class=\\\"image-container\\\">\\n                    <img src=\\\"./assets/img/html.png\\\" alt=\\\"unloaded\\\">\\n                </div>\\n                Html5\\n                <div class=\\\"separator\\\"></div>\\n                <div class=\\\"price\\\">\\n                    from\\n                    <span>\\n                        49\\n                        <i class=\\\"fa fa-usd\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n            </a>\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard-pro-angular2\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\n                <div class=\\\"image-container image-angular-cli\\\">\\n                    <img src=\\\"./assets/img/angular.png\\\" alt=\\\"unloaded\\\">\\n                </div>\\n                Angular\\n                <div class=\\\"separator\\\"></div>\\n                <div class=\\\"price\\\">\\n                    from\\n                    <span>\\n                        59\\n                        <i class=\\\"fa fa-usd\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n</div>\\n\\n</div>\\n\"","export default \"\\n<div class=\\\"wrapper\\\">\\n    <div style=\\\"text-align:center\\\">\\n        <img src=\\\"/assets/img/safer-logo1.png\\\" style=\\\"width:155px;\\\"/>\\n    </div>\\n    \\n    <!-- <div class=\\\"sidebar\\\" data-color=\\\"orange\\\" data-background-color=\\\"white\\\" data-image=\\\"./assets/img/sidebar-3.jpg\\\">\\n        <app-sidebar></app-sidebar>\\n        <div class=\\\"sidebar-background\\\" style=\\\"background-image: url(./assets/img/sidebar-4.jpg)\\\"></div>\\n    </div> -->\\n    <div class=\\\"main-panel\\\">\\n        <!-- <app-navbar></app-navbar> -->\\n        <router-outlet></router-outlet>\\n        <!-- <div *ngIf=\\\"isMaps('maps')\\\">\\n            <app-footer></app-footer>\\n        </div> -->\\n    </div>\\n    <!-- <div class=\\\"fixed-plugin\\\">\\n        <div class=\\\"dropdown show-dropdown open show\\\">\\n            <a href=\\\"#\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"true\\\">\\n                <i class=\\\"fa fa-cog fa-2x\\\"> </i>\\n            </a>\\n            <ul class=\\\"dropdown-menu show\\\" x-placement=\\\"bottom-start\\\" style=\\\"position: absolute; top: 41px; left: -231px; will-change: top, left;\\\">\\n                <li class=\\\"header-title\\\"> Sidebar Filters</li>\\n                <li class=\\\"adjustments-line\\\">\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"switch-trigger active-color\\\">\\n                        <div class=\\\"ml-auto mr-auto\\\">\\n                            <span class=\\\"badge filter badge-purple\\\" data-color=\\\"purple\\\"></span>\\n                            <span class=\\\"badge filter badge-azure\\\" data-color=\\\"azure\\\"></span>\\n                            <span class=\\\"badge filter badge-green\\\" data-color=\\\"green\\\"></span>\\n                            <span class=\\\"badge filter badge-orange \\\" data-color=\\\"orange\\\"></span>\\n                            <span class=\\\"badge filter badge-danger active\\\" data-color=\\\"danger\\\"></span>\\n                        </div>\\n                        <div class=\\\"clearfix\\\"></div>\\n                    <div class=\\\"ripple-container\\\"></div></a>\\n                </li>\\n                <li class=\\\"header-title\\\">Images</li>\\n                <li>\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\n                        <img src=\\\"./assets/img/sidebar-1.jpg\\\" alt=\\\"\\\">\\n                    </a>\\n                </li>\\n                <li>\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\n                        <img src=\\\"./assets/img/sidebar-2.jpg\\\" alt=\\\"\\\">\\n                    <div class=\\\"ripple-container\\\"></div></a>\\n                </li>\\n                <li>\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\n                        <img src=\\\"./assets/img/sidebar-3.jpg\\\" alt=\\\"\\\">\\n                    </a>\\n                </li>\\n                <li class=\\\"active\\\">\\n                    <a class=\\\"img-holder switch-trigger\\\" href=\\\"javascript:void(0)\\\">\\n                        <img src=\\\"./assets/img/sidebar-4.jpg\\\" alt=\\\"\\\">\\n                    </a>\\n                </li>\\n                <li class=\\\"button-container\\\">\\n                    <div>\\n                        <button class=\\\"btn btn-info btn-block btn-fill\\\" data-toggle=\\\"modal\\\" data-target=\\\"#buy\\\">\\n                            Download Free\\n                        </button>\\n                    </div>\\n                </li>\\n                <li class=\\\"button-container\\\">\\n                    <div>\\n                        <button class=\\\"btn btn-warning btn-block btn-fill\\\" data-toggle=\\\"modal\\\" data-target=\\\"#buy\\\">\\n                            Buy Pro\\n                        </button>\\n                    </div>\\n                </li>\\n                <li class=\\\"button-container text-center\\\" routerLinkActive=\\\"active\\\">\\n                  <div>\\n                    <a class=\\\"btn btn-default btn-block\\\" href=\\\"https://demos.creative-tim.com/material-dashboard-angular2/#/documentation/tutorial\\\">\\n                        View Documentation\\n                    </a>\\n                  </div>\\n                </li>\\n            </ul>\\n        </div>\\n    </div> -->\\n</div>\\n<!-- Buy-Modal-angular -->\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"buy\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\n<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-body text-center\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n            <h4 class=\\\"margin-top\\\">\\n                Free Version\\n            </h4>\\n            <div class=\\\"separator\\\"></div>\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\n                <div class=\\\"wrapper-card\\\">\\n                    <div class=\\\"image-container\\\">\\n                        <img src=\\\"./assets/img/html.png\\\" alt=\\\"unloaded\\\">\\n                    </div>\\n                    Html5\\n                    <div class=\\\"separator\\\"></div>\\n                    <div class=\\\"product-type\\\">\\n                        FREE\\n                    </div>\\n                </div>\\n            </a>\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard-angular2\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\n                <div class=\\\"wrapper-card\\\">\\n                    <div class=\\\"image-container image-angular-cli\\\">\\n                        <img src=\\\"./assets/img/angular.png\\\" alt=\\\"unloaded\\\">\\n                    </div>\\n                    Angular\\n                    <div class=\\\"separator\\\"></div>\\n                    <div class=\\\"product-type\\\">\\n                        FREE\\n                    </div>\\n                </div>\\n            </a>\\n            <h4>\\n                PRO Version\\n            </h4>\\n            <div class=\\\"separator\\\"></div>\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard-pro\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\n                <div class=\\\"image-container\\\">\\n                    <img src=\\\"./assets/img/html.png\\\" alt=\\\"unloaded\\\">\\n                </div>\\n                Html5\\n                <div class=\\\"separator\\\"></div>\\n                <div class=\\\"price\\\">\\n                    from\\n                    <span>\\n                        49\\n                        <i class=\\\"fa fa-usd\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n            </a>\\n            <a href=\\\"https://www.creative-tim.com/product/material-dashboard-pro-angular2\\\" class=\\\"modal-button\\\" target=\\\"_blank\\\">\\n                <div class=\\\"image-container image-angular-cli\\\">\\n                    <img src=\\\"./assets/img/angular.png\\\" alt=\\\"unloaded\\\">\\n                </div>\\n                Angular\\n                <div class=\\\"separator\\\"></div>\\n                <div class=\\\"price\\\">\\n                    from\\n                    <span>\\n                        59\\n                        <i class=\\\"fa fa-usd\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n</div>\\n\\n</div>\\n\"","var map = {\n\t\"./layouts/admin-layout/admin-layout.module\": [\n\t\t\"./src/app/layouts/admin-layout/admin-layout.module.ts\",\n\t\t\"default~layouts-admin-layout-admin-layout-module~layouts-full-layout-full-layout-module\",\n\t\t\"layouts-admin-layout-admin-layout-module\"\n\t],\n\t\"./layouts/full-layout/full-layout.module\": [\n\t\t\"./src/app/layouts/full-layout/full-layout.module.ts\",\n\t\t\"default~layouts-admin-layout-admin-layout-module~layouts-full-layout-full-layout-module\",\n\t\t\"layouts-full-layout-full-layout-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component} from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\n\n\nimport { AppRoutingModule } from './app.routing';\nimport { ComponentsModule } from './components/components.module';\n\nimport { AppComponent } from './app.component';\n\n// import { DashboardComponent } from './dashboard/dashboard.component';\n// import { UserProfileComponent } from './user-profile/user-profile.component';\n// import { TableListComponent } from './table-list/table-list.component';\n// import { TypographyComponent } from './typography/typography.component';\n// import { IconsComponent } from './icons/icons.component';\n// import { MapsComponent } from './maps/maps.component';\n// import { NotificationsComponent } from './notifications/notifications.component';\n// import { UpgradeComponent } from './upgrade/upgrade.component';\nimport {\n  AgmCoreModule\n} from '@agm/core';\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\nimport { FullLayoutComponent } from './layouts/full-layout/full-layout.component';\nimport { AuthService } from './providers/auth/auth.service';\nimport { AuthGuard } from './providers/auth/auth-guard.service';\nimport { LocalStorageService } from './providers/local-storage/local-storage';\nimport { JwtTokenService } from './providers/local-storage/jwt-token';\nimport { RemoteServiceProvider } from './providers/remote-service/remote-service';\nimport { RemoteServiceUsersProvider } from './providers/remote-service/remote-service-users';\nimport { RemoteServicePerfilProvider } from './providers/remote-service/remote-service-perfil';\nimport { RemoteServiceEmpresaProvider } from './providers/remote-service/remote-service-empresa';\nimport { RemoteServiceUnidadeProvider } from './providers/remote-service/remote-service-unidade';\nimport { RemoteServiceCargoProvider } from './providers/remote-service/remote-service-cargo';\nimport { RemoteServiceFuncionariosProvider } from './providers/remote-service/remote-service-funcionarios';\nimport { RemoteServiceTipoSanguinioProvider } from './providers/remote-service/remote-service-tipo-sanguinio';\nimport { RemoteServiceTreinamentoProvider } from './providers/remote-service/remote-service-treinamento';\nimport { NotificationeService } from './providers/notification/notification';\nimport { DefaultService } from './providers/default/default';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport { LoadingBarHttpModule } from '@ngx-loading-bar/http';\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\n\n\nimport { MAT_DATE_LOCALE} from '@angular/material/core';\n\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    ComponentsModule,\n    RouterModule,\n    AppRoutingModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'YOUR_GOOGLE_MAPS_API_KEY'\n    }),\n    LoadingBarModule,\n    LoadingBarHttpModule,\n    LoadingBarRouterModule\n  ],\n  declarations: [\n    AppComponent,\n    AdminLayoutComponent,\n    FullLayoutComponent\n\n  ],\n  \n  providers: [\n    AuthService,\n    AuthGuard,\n    JwtTokenService,\n    LocalStorageService,\n    RemoteServiceProvider,\n    RemoteServiceUsersProvider,\n    RemoteServicePerfilProvider,\n    RemoteServiceEmpresaProvider,\n    RemoteServiceUnidadeProvider,\n    NotificationeService,\n    DefaultService,\n    RemoteServiceCargoProvider,\n    RemoteServiceFuncionariosProvider,\n    RemoteServiceTipoSanguinioProvider,\n    RemoteServiceTreinamentoProvider,\n    {provide: MAT_DATE_LOCALE, useValue: 'pt-BR'}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, } from '@angular/common';\nimport { BrowserModule  } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\nimport { FullLayoutComponent } from './layouts/full-layout/full-layout.component';\nimport { AuthGuard } from './providers/auth/auth-guard.service';\n\n\nconst routes: Routes =[\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full',\n  }, {\n    path: '',\n    component: AdminLayoutComponent,\n    children: [{\n      path: '',\n      loadChildren: './layouts/admin-layout/admin-layout.module#AdminLayoutModule'\n    }],\n    canActivate: [AuthGuard]\n  },\n  { path: '', \n  component: FullLayoutComponent, \n  children: [{\n    path: '',\n    loadChildren: './layouts/full-layout/full-layout.module#FullLayoutModule',\n    canActivate: [AuthGuard]\n  }] \n},\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    RouterModule.forRoot(routes,{\n       useHash: false\n    })\n  ],\n  exports: [\n    RouterModule\n  ],\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { FooterComponent } from './footer/footer.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n  ],\n  declarations: [\n    FooterComponent,\n    NavbarComponent,\n    SidebarComponent,\n   \n  ],\n  exports: [\n    FooterComponent,\n    NavbarComponent,\n    SidebarComponent,\n  \n  ]\n})\nexport class ComponentsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  test : Date = new Date();\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n.dropdown-menu .dropdown-item:hover { background: #ff9800 }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHNDQUFzQyxvQkFBb0IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmRyb3Bkb3duLW1lbnUgLmRyb3Bkb3duLWl0ZW06aG92ZXIgeyBiYWNrZ3JvdW5kOiAjZmY5ODAwIH0iXX0= */\"","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { ROUTES } from '../sidebar/sidebar.component';\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { JwtTokenService } from '../../providers/local-storage/jwt-token';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n    private listTitles: any[];\n    location: Location;\n      mobile_menu_visible: any = 0;\n    private toggleButton: any;\n    private sidebarVisible: boolean;\n\n    constructor(\n        location: Location,  \n        private element: ElementRef, \n        private route: ActivatedRoute,\n        private jwtToken: JwtTokenService,\n        private router: Router) {\n      this.location = location;\n          this.sidebarVisible = false;\n    }\n\n    ngOnInit(){\n      this.listTitles = ROUTES.filter(listTitle => listTitle);\n      const navbar: HTMLElement = this.element.nativeElement;\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggler')[0];\n      this.router.events.subscribe((event) => {\n        this.sidebarClose();\n         var $layer: any = document.getElementsByClassName('close-layer')[0];\n         if ($layer) {\n           $layer.remove();\n           this.mobile_menu_visible = 0;\n         }\n     });\n    }\n\n    sidebarOpen() {\n        const toggleButton = this.toggleButton;\n        const body = document.getElementsByTagName('body')[0];\n        setTimeout(function(){\n            toggleButton.classList.add('toggled');\n        }, 500);\n\n        body.classList.add('nav-open');\n\n        this.sidebarVisible = true;\n    };\n    sidebarClose() {\n        const body = document.getElementsByTagName('body')[0];\n        this.toggleButton.classList.remove('toggled');\n        this.sidebarVisible = false;\n        body.classList.remove('nav-open');\n    };\n    sidebarToggle() {\n        // const toggleButton = this.toggleButton;\n        // const body = document.getElementsByTagName('body')[0];\n        var $toggle = document.getElementsByClassName('navbar-toggler')[0];\n\n        if (this.sidebarVisible === false) {\n            this.sidebarOpen();\n        } else {\n            this.sidebarClose();\n        }\n        const body = document.getElementsByTagName('body')[0];\n\n        if (this.mobile_menu_visible == 1) {\n            // $('html').removeClass('nav-open');\n            body.classList.remove('nav-open');\n            if ($layer) {\n                $layer.remove();\n            }\n            setTimeout(function() {\n                $toggle.classList.remove('toggled');\n            }, 400);\n\n            this.mobile_menu_visible = 0;\n        } else {\n            setTimeout(function() {\n                $toggle.classList.add('toggled');\n            }, 430);\n\n            var $layer = document.createElement('div');\n            $layer.setAttribute('class', 'close-layer');\n\n\n            if (body.querySelectorAll('.main-panel')) {\n                document.getElementsByClassName('main-panel')[0].appendChild($layer);\n            }else if (body.classList.contains('off-canvas-sidebar')) {\n                document.getElementsByClassName('wrapper-full-page')[0].appendChild($layer);\n            }\n\n            setTimeout(function() {\n                $layer.classList.add('visible');\n            }, 100);\n\n            $layer.onclick = function() { //asign a function\n              body.classList.remove('nav-open');\n              this.mobile_menu_visible = 0;\n              $layer.classList.remove('visible');\n              setTimeout(function() {\n                  $layer.remove();\n                  $toggle.classList.remove('toggled');\n              }, 400);\n            }.bind(this);\n\n            body.classList.add('nav-open');\n            this.mobile_menu_visible = 1;\n\n        }\n    };\n\n    getTitle(){\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n      if(titlee.charAt(0) === '#'){\n          titlee = titlee.slice( 1 );\n      }\n\n      for(var item = 0; item < this.listTitles.length; item++){\n          if(this.listTitles[item].path === titlee){\n              return this.listTitles[item].title;\n          }\n      }\n      return 'Dashboard';\n    }\n\n    sair(){\n        this.jwtToken.token = '';\n        this.router.navigate(['/login'], { relativeTo: this.route.parent });\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\ndeclare const $: any;\ndeclare interface RouteInfo {\n    path: string;\n    title: string;\n    icon: string;\n    class: string;\n}\nexport const ROUTES: RouteInfo[] = [\n    { path: '/dashboard', title: 'Dashboard',  icon: 'dashboard', class: '' },\n    { path: '/usuarios', title: 'Usuários Sistema',  icon: 'person', class: '' },\n    { path: '/perfil', title: 'Pefil Acesso',  icon: 'supervised_user_circle', class: '' },\n    { path: '/empresa', title: 'Empresas',  icon: 'work', class: '' },\n    { path: '/unidade', title: 'Unidades',  icon: 'account_balance', class: '' },\n    { path: '/treinamento', title: 'Treinamentos',  icon: 'pending_actions', class: '' },\n    { path: '/cargo', title: 'Cargos',  icon: 'engineering', class: '' },\n    { path: '/funcionario', title: 'Funcionarios',  icon: 'portrait', class: '' },\n    { path: '/user-profile', title: 'User Profile',  icon:'person', class: '' },\n    { path: '/table-list', title: 'Table List',  icon:'content_paste', class: '' },\n    { path: '/typography', title: 'Typography',  icon:'library_books', class: '' },\n    { path: '/icons', title: 'Icons',  icon:'bubble_chart', class: '' },\n    { path: '/maps', title: 'Maps',  icon:'location_on', class: '' },\n    { path: '/notifications', title: 'Notifications',  icon:'notifications', class: '' },\n    // { path: '/upgrade', title: 'Upgrade to PRO',  icon:'unarchive', class: 'active-pro' },\n];\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  menuItems: any[];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\n  }\n  isMobileMenu() {\n      if ($(window).width() > 991) {\n          return false;\n      }\n      return true;\n  };\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYWRtaW4tbGF5b3V0L2FkbWluLWxheW91dC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\nimport 'rxjs/add/operator/filter';\nimport { NavbarComponent } from '../../components/navbar/navbar.component';\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport * as $ from \"jquery\";\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n  private _router: Subscription;\n  private lastPoppedUrl: string;\n  private yScrollStack: number[] = [];\n\n  constructor( public location: Location, private router: Router) {}\n\n  ngOnInit() {\n      const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\n\n      if (isWindows && !document.getElementsByTagName('body')[0].classList.contains('sidebar-mini')) {\n          // if we are on windows OS we activate the perfectScrollbar function\n\n          document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\n      } else {\n          document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\n      }\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\n      const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\n      \n    \n      this.location.subscribe((ev:PopStateEvent) => {\n          this.lastPoppedUrl = ev.url;\n      });\n       this.router.events.subscribe((event:any) => {\n          if (event instanceof NavigationStart) {\n             if (event.url != this.lastPoppedUrl)\n                 this.yScrollStack.push(window.scrollY);\n         } else if (event instanceof NavigationEnd) {\n             if (event.url == this.lastPoppedUrl) {\n                 this.lastPoppedUrl = undefined;\n                 window.scrollTo(0, this.yScrollStack.pop());\n             } else\n                 window.scrollTo(0, 0);\n         }\n      });\n      this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\n           elemMainPanel.scrollTop = 0;\n           elemSidebar.scrollTop = 0;\n      });\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n          let ps = new PerfectScrollbar(elemMainPanel);\n          ps = new PerfectScrollbar(elemSidebar);\n      }\n\n      const window_width = $(window).width();\n      let $sidebar = $('.sidebar');\n      let $sidebar_responsive = $('body > .navbar-collapse');\n      let $sidebar_img_container = $sidebar.find('.sidebar-background');\n\n\n      if(window_width > 767){\n          if($('.fixed-plugin .dropdown').hasClass('show-dropdown')){\n              $('.fixed-plugin .dropdown').addClass('open');\n          }\n\n      }\n\n      $('.fixed-plugin a').click(function(event){\n        // Alex if we click on switch, stop propagation of the event, so the dropdown will not be hide, otherwise we set the  section active\n          if($(this).hasClass('switch-trigger')){\n              if(event.stopPropagation){\n                  event.stopPropagation();\n              }\n              else if(window.event){\n                 window.event.cancelBubble = true;\n              }\n          }\n      });\n\n      $('.fixed-plugin .badge').click(function(){\n          let $full_page_background = $('.full-page-background');\n\n\n          $(this).siblings().removeClass('active');\n          $(this).addClass('active');\n\n          var new_color = $(this).data('color');\n\n          if($sidebar.length !== 0){\n              $sidebar.attr('data-color', new_color);\n          }\n\n          if($sidebar_responsive.length != 0){\n              $sidebar_responsive.attr('data-color',new_color);\n          }\n      });\n\n      $('.fixed-plugin .img-holder').click(function(){\n          let $full_page_background = $('.full-page-background');\n\n          $(this).parent('li').siblings().removeClass('active');\n          $(this).parent('li').addClass('active');\n\n\n          var new_image = $(this).find(\"img\").attr('src');\n\n          if($sidebar_img_container.length !=0 ){\n              $sidebar_img_container.fadeOut('fast', function(){\n                 $sidebar_img_container.css('background-image','url(\"' + new_image + '\")');\n                 $sidebar_img_container.fadeIn('fast');\n              });\n          }\n\n          if($full_page_background.length != 0){\n\n              $full_page_background.fadeOut('fast', function(){\n                 $full_page_background.css('background-image','url(\"' + new_image + '\")');\n                 $full_page_background.fadeIn('fast');\n              });\n          }\n\n          if($sidebar_responsive.length != 0){\n              $sidebar_responsive.css('background-image','url(\"' + new_image + '\")');\n          }\n      });\n  }\n  ngAfterViewInit() {\n      this.runOnRouteChange();\n  }\n  isMaps(path){\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n      titlee = titlee.slice( 1 );\n      if(path == titlee){\n          return false;\n      }\n      else {\n          return true;\n      }\n  }\n  runOnRouteChange(): void {\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\n      const ps = new PerfectScrollbar(elemMainPanel);\n      ps.update();\n    }\n  }\n  isMac(): boolean {\n      let bool = false;\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\n          bool = true;\n      }\n      return bool;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvZnVsbC1sYXlvdXQvZnVsbC1sYXlvdXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\nimport 'rxjs/add/operator/filter';\nimport { NavbarComponent } from '../../components/navbar/navbar.component';\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport * as $ from \"jquery\";\n\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: './full-layout.component.html',\n  styleUrls: ['./full-layout.component.scss']\n})\nexport class FullLayoutComponent implements OnInit {\n  private _router: Subscription;\n  private lastPoppedUrl: string;\n  private yScrollStack: number[] = [];\n\n  constructor( public location: Location, private router: Router) {}\n\n  ngOnInit() {\n    //   const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\n\n    //   if (isWindows && !document.getElementsByTagName('body')[0].classList.contains('sidebar-mini')) {\n    //       // if we are on windows OS we activate the perfectScrollbar function\n\n    //       document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\n    //   } else {\n    //       document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\n    //   }\n    //   const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\n    //   const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\n\n    //   this.location.subscribe((ev:PopStateEvent) => {\n    //       this.lastPoppedUrl = ev.url;\n    //   });\n    //    this.router.events.subscribe((event:any) => {\n    //       if (event instanceof NavigationStart) {\n    //          if (event.url != this.lastPoppedUrl)\n    //              this.yScrollStack.push(window.scrollY);\n    //      } else if (event instanceof NavigationEnd) {\n    //          if (event.url == this.lastPoppedUrl) {\n    //              this.lastPoppedUrl = undefined;\n    //              window.scrollTo(0, this.yScrollStack.pop());\n    //          } else\n    //              window.scrollTo(0, 0);\n    //      }\n    //   });\n    //   this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\n    //        elemMainPanel.scrollTop = 0;\n    //        elemSidebar.scrollTop = 0;\n    //   });\n    //   if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n    //       let ps = new PerfectScrollbar(elemMainPanel);\n    //       ps = new PerfectScrollbar(elemSidebar);\n    //   }\n\n    //   const window_width = $(window).width();\n    //   let $sidebar = $('.sidebar');\n    //   let $sidebar_responsive = $('body > .navbar-collapse');\n    //   let $sidebar_img_container = $sidebar.find('.sidebar-background');\n\n\n    //   if(window_width > 767){\n    //       if($('.fixed-plugin .dropdown').hasClass('show-dropdown')){\n    //           $('.fixed-plugin .dropdown').addClass('open');\n    //       }\n\n    //   }\n\n    //   $('.fixed-plugin a').click(function(event){\n    //     // Alex if we click on switch, stop propagation of the event, so the dropdown will not be hide, otherwise we set the  section active\n    //       if($(this).hasClass('switch-trigger')){\n    //           if(event.stopPropagation){\n    //               event.stopPropagation();\n    //           }\n    //           else if(window.event){\n    //              window.event.cancelBubble = true;\n    //           }\n    //       }\n    //   });\n\n    //   $('.fixed-plugin .badge').click(function(){\n    //       let $full_page_background = $('.full-page-background');\n\n\n    //       $(this).siblings().removeClass('active');\n    //       $(this).addClass('active');\n\n    //       var new_color = $(this).data('color');\n\n    //       if($sidebar.length !== 0){\n    //           $sidebar.attr('data-color', new_color);\n    //       }\n\n    //       if($sidebar_responsive.length != 0){\n    //           $sidebar_responsive.attr('data-color',new_color);\n    //       }\n    //   });\n\n    //   $('.fixed-plugin .img-holder').click(function(){\n    //       let $full_page_background = $('.full-page-background');\n\n    //       $(this).parent('li').siblings().removeClass('active');\n    //       $(this).parent('li').addClass('active');\n\n\n    //       var new_image = $(this).find(\"img\").attr('src');\n\n    //       if($sidebar_img_container.length !=0 ){\n    //           $sidebar_img_container.fadeOut('fast', function(){\n    //              $sidebar_img_container.css('background-image','url(\"' + new_image + '\")');\n    //              $sidebar_img_container.fadeIn('fast');\n    //           });\n    //       }\n\n    //       if($full_page_background.length != 0){\n\n    //           $full_page_background.fadeOut('fast', function(){\n    //              $full_page_background.css('background-image','url(\"' + new_image + '\")');\n    //              $full_page_background.fadeIn('fast');\n    //           });\n    //       }\n\n    //       if($sidebar_responsive.length != 0){\n    //           $sidebar_responsive.css('background-image','url(\"' + new_image + '\")');\n    //       }\n    //   });\n  }\n//   ngAfterViewInit() {\n//       this.runOnRouteChange();\n//   }\n//   isMaps(path){\n//       var titlee = this.location.prepareExternalUrl(this.location.path());\n//       titlee = titlee.slice( 1 );\n//       if(path == titlee){\n//           return false;\n//       }\n//       else {\n//           return true;\n//       }\n//   }\n//   runOnRouteChange(): void {\n//     if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n//       const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\n//       const ps = new PerfectScrollbar(elemMainPanel);\n//       ps.update();\n//     }\n//   }\n//   isMac(): boolean {\n//       let bool = false;\n//       if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\n//           bool = true;\n//       }\n//       return bool;\n//   }\n\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n  constructor(private authService: AuthService, private router: Router,\r\n    private route: ActivatedRoute) {}\r\n\r\n  //canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean{\r\n\r\n    console.log('AUTH GUARD: ' + this.authService.check);\r\n    if(this.authService.check || state.url == '/login' || state.url == '/nova-senha'){\r\n      return true;\r\n\r\n    }else{\r\n\r\n      this.router.navigate(['../login'], { relativeTo: this.route.parent });\r\n      return true;\r\n    }\r\n    \r\n\r\n     \r\n\r\n\r\n\r\n  }\r\n}\r\n","import { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { JwtTokenService } from '../local-storage/jwt-token';\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  token: string;\r\n  public check: Boolean = false; \r\n\r\n\r\n  constructor(private jwtToken:JwtTokenService,private router: Router) {\r\n\r\n    this.check = this.jwtToken.get('token') ? true : false; \r\n    console.log('AUTH.SERVICE : '+ this.check);\r\n\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {JwtTokenService} from '../local-storage/jwt-token'\nimport {NotificationeService} from '../notification/notification'\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { formatDate } from \"@angular/common\";\n\ndeclare var $: any;\n@Injectable()\nexport class DefaultService {\n\n  constructor(\n    private jwtToken: JwtTokenService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private notifification: NotificationeService,\n  ) { }\n\n\n  error(error,title){\n      console.log(\"ERROR: \",error);\n\n    if(error.hasOwnProperty('status') || error.status == 401){\n        this.notifification.show('top','right','danger',title,'Não autorizado faça login novamente!');\n        this.jwtToken.token = '';\n        this.router.navigate(['/login'], { relativeTo: this.route.parent });\n      }else{\n        this.notifification.show('top','right','danger',title,error);\n      }\n    \n    }\n\n  async formatDDMMYYYY(myDate){\n\n    const format = 'dd/MM/yyyy';\n    // const myDate = '2019-06-29';\n    const locale = 'en-US';\n    return formatDate(myDate, format, locale);\n\n  }\n\n  async formatYYYYMMDD(myDate){\n\n    const format = 'yyyy-MM-dd';\n    // const myDate = '2019-06-29';\n    const locale = 'en-US';\n    return formatDate(myDate, format, locale);\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {LocalStorageService} from './local-storage';\n\nconst TOKEN_KEY = 'token';\n\n@Injectable()\nexport class JwtTokenService {\n\n  constructor(private localStorage:LocalStorageService) { }\n\n  set token(value){\n    value ? this.localStorage.set(TOKEN_KEY, value):this.localStorage.remove(TOKEN_KEY);\n\n  }\n\n  get(key, defaultValue = null){\n    return this.localStorage.get(TOKEN_KEY);\n\n\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LocalStorageService {\n\n  constructor() { }\n\n  set(key,value){\n    window.localStorage[key] = value;\n    return this;\n\n  }\n\n  get(key, defaultValue = null){\n    return window.localStorage[key] || defaultValue;\n\n\n  }\n\n  setObject(key, value:Object){\n    window.localStorage[key] = JSON.stringify(value); \n    return this;\n  }\n\n\n  getObject(key){\n\n    if(window.localStorage[key]){\n      return JSON.parse(window.localStorage[key]);\n    }else{\n      return '';\n    }\n    \n\n  }\n\n  remove(key){\n    window.localStorage.removeItem(key);\n    return this;\n\n  }\n}\n","import { Injectable } from '@angular/core';\n\ndeclare var $: any;\n@Injectable()\nexport class NotificationeService {\n\n  constructor() { }\n\n\n  show(from, align,type,title,message){\n    // const type = ['','info','success','warning','danger'];\n    // const color = Math.floor((Math.random() * 4) + 1);\n\n    $.notify({\n        icon: \"notifications\",\n        message: \"Welcome to <b>Material Dashboard</b> - a beautiful freebie for every web developer.\"\n\n    },{\n        // type: type[color],\n        type: type,\n        timer: 4000,\n        placement: {\n            from: from,\n            align: align\n        },\n        template: `<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">\n          <button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>\n          <i class=\"material-icons\" data-notify=\"icon\">notifications</i> \n          <span data-notify=\"title\">${title}</span> \n          <span data-notify=\"message\">${message}</span>\n          <div class=\"progress\" data-notify=\"progressbar\">\n            <div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>\n          </div>\n          <a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a> \n        </div>`\n    });\n}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Headers } from '@angular/http';\nimport { BASE_URL,  ServiceURL} from './routes'\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class RemoteServiceCargoProvider {\n\tprivate headers;\n\tprivate httpOptions;\n\tprivate headersLocal;\n\tprivate httpOptionsLocal;\n\tprivate tokenHttpOptions;\n\t\n\n\n\t\n  \tconstructor(public http: Http) {\n\t\t\tconsole.log('Hello RemoteServiceProvider Provider remote-service');\n\t\t\tthis.headers = new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t});\n\t\t\tthis.httpOptions = new RequestOptions({\n\t\t\t\theaders: this.headers\n\t\t\t});\n\n\t\t\tthis.headersLocal = new Headers({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n\t\t\t});\n\t\t\tthis.httpOptionsLocal = new RequestOptions({\n\t\t\t\theaders: this.headersLocal\n\t\t\t});\n  \t}\n\t\n\n\tprivate configureTokenHeader(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Accept': 'application/json;',\n\t\t\t'Authorization': 'Bearer ' + token,\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\tprivate configureTokenHeaderForm(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Authorization': 'Bearer ' + token\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\n\n\n\tall(token){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tthis.http.get(ServiceURL.CARGO, this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tadd(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\n\t\t\tthis.http.post(ServiceURL.CARGO, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tupdate(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\n\t\t\tthis.http.put(ServiceURL.CARGO, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Headers } from '@angular/http';\nimport { BASE_URL,  ServiceURL} from './routes'\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class RemoteServiceEmpresaProvider {\n\tprivate headers;\n\tprivate httpOptions;\n\tprivate headersLocal;\n\tprivate httpOptionsLocal;\n\tprivate tokenHttpOptions;\n\t\n\n\n\t\n  \tconstructor(public http: Http) {\n\t\t\tconsole.log('Hello RemoteServiceProvider Provider remote-service');\n\t\t\tthis.headers = new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t});\n\t\t\tthis.httpOptions = new RequestOptions({\n\t\t\t\theaders: this.headers\n\t\t\t});\n\n\t\t\tthis.headersLocal = new Headers({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n\t\t\t});\n\t\t\tthis.httpOptionsLocal = new RequestOptions({\n\t\t\t\theaders: this.headersLocal\n\t\t\t});\n  \t}\n\t\n\n\tprivate configureTokenHeader(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Accept': 'application/json;',\n\t\t\t'Authorization': 'Bearer ' + token,\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\tprivate configureTokenHeaderForm(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Authorization': 'Bearer ' + token\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\n\n\n\tall(token){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tthis.http.get(ServiceURL.EMPRESA, this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tadd(token,dados){\n\n\t\tthis.configureTokenHeaderForm(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\t// let body = JSON.stringify(dados);\n\n\t\t\tconst formData: FormData = new FormData();\n\t\t\tformData.append('nome', dados.nome);\n\t\t\tformData.append('cnpj', dados.cnpj);\n\t\t\tformData.append('logo', dados.logo);\n\n\n\t\t\tthis.http.post(ServiceURL.EMPRESA, formData,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tupdate(token,dados){\n\n\t\tthis.configureTokenHeaderForm(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tconst formData: FormData = new FormData();\n\t\t\tformData.append('id', dados.id);\n\t\t\tformData.append('nome', dados.nome);\n\t\t\tformData.append('cnpj', dados.cnpj);\n\t\t\tformData.append('logo', dados.logo);\n\t\t\tformData.append('status', dados.status);\n\n\t\t\tthis.http.put(ServiceURL.EMPRESA, formData,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tlistUnidades(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\t\tlet json = {\n\t\t\t\tempresas:dados\n\t\t\t}\n\t\t\tlet body = JSON.stringify(json);\n\n\t\t\tthis.http.post(ServiceURL.UNIDADES_BY_EMPRESAS, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\t\n\n\t// usuarioIncluir(dados,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioIncluir\");\n\t// \tlet res = new Promise(resolve => {\n\n\t// \t\tlet jsonBody = {\n\n\t// \t\t\tid\t\t\t: dados.id,\n\t// \t\t\tname\t\t: dados.name,\n\t// \t\t\temail\t\t: dados.email,\n\t// \t\t\tpassword\t:'',\n\t// \t\t\tc_password\t:'',\n\t// \t\t\tperfil\t\t:dados.idPerfil,\n\t// \t\t\tidEmpresaPrincipal :dados.idEmpresaPrincipal,\n\t// \t\t\tsenhaTemporaria\t\t: 1,\n\t// \t\t\tempresa: dados.empresa,\n\t// \t\t\tativo\t\t:0\n\n\t// \t\t}\t\t\t\n\n\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_CADASTRAR, body, this.httpOptions).subscribe((response) => {\n\t// \t\t//this.http.get(ServiceURL.LOGIN, this.httpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioIncluir: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n\n\t// usuarioStatus(id,ativo,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioEsqueci\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\n\t// \t\t\tid\t\t\t: id,\n\t// \t\t\tativo\t\t: ativo\n\n\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_STATUS, body, this.tokenHttpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioEsqueci: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\t\n\n\t// novaSenha(email: String, password: String, password_new: String){\n\t// \tconsole.log(\"RemoteServiceProvider.novaSenha\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\t// \t\t\temail: email,\n\t// \t\t\tpassword: password,\n\t// \t\t\tpassword_new: password_new\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_NOVA_SENHA, body, this.httpOptions).subscribe((response) => {\n\t\t\t\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success, token: data.success.token}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.novaSenha: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n\n\n\n\t// usuarioEsqueci(email,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioEsqueci\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\t// \t\t\temail\t\t: email\n\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_ESQUECI, body, this.httpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioEsqueci: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n// \tusuarioDeletar(id,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.usuarioDeletar\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: id\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.USUARIO_DELETE, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioDeletar: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// //tipo checklist --------------------------------------------------------------------------------\n\n// \tlistaTipoCheckList(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaTipoCheckList\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.TIPOS_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaTipoCheckList: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarCheckList(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarCheckList\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t: dados.id,\n// \t\t\t\tnome\t: dados.nome,\n// \t\t\t\ticone\t: dados.icone,\n// \t\t\t\tativa\t: dados.ativa\n\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_TIPOS_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t//this.http.get(ServiceURL.LOGIN, this.httpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarCheckList: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n\n// \t//UNIDADES --------------------------------------------------------------------------------\n\n// \tlistaUnidades(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaUnidades\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.UNIDADES, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaUnidades: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// \tsalvarUnidade(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarUnidade\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidPais\t\t\t: dados.idPais,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\tnomeFantasia\t: dados.nomeFantasia,\n// \t\t\t\tcnpj\t\t\t: dados.cnpj,\n// \t\t\t\tendereco\t\t: dados.endereco,\n// \t\t\t\tcidade\t\t\t: dados.cidade,\n// \t\t\t\tnumero\t\t\t: dados.numero,\n// \t\t\t\tcep\t\t\t\t: dados.cep,\n// \t\t\t\tbairro\t\t\t: dados.bairro,\n// \t\t\t\testado\t\t\t: dados.estado,\n// \t\t\t\tgrauRisco\t\t: dados.grauRisco,\n// \t\t\t\tativa\t\t\t: dados.ativa\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_UNIDADES, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarUnidade: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\t\n\n// \tlistaFuncionario(idUnidade,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.listaFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tidUnidade\t\t: idUnidade\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\t\n\n\n// \tsalvarFuncionario(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidUnidade\t\t: dados.idUnidade,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\temail\t\t\t: dados.email,\n// \t\t\t\tidCorp\t\t\t: dados.idCorp\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tdeletarFuncionario(id,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.deletarFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: id\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.DELETAR_FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.deletarFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// \t//FORMULARIOS ----------------------------------------------------------------------------------------------------------\n\n// \tlistaFormularios(token, idTipo = null){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaFormularios\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tif (idTipo){\n// \t\t\t\tjsonBody = { idTipo: idTipo };\n// \t\t\t} \n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.FORMULARIO, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaFormularios: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarFormulario(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFormulario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidTipo\t\t\t: dados.idTipo,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\tativa\t\t\t: dados.ativa\n\n// \t\t\t}\n\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FORMULARIO, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFormulario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tlistaEpis(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaEpis\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.LISTA_EPI, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaEpis: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n// \tsalvarFomularioEpi(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFomularioEpi\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tidFormulario\t: dados.idFormulario,\n// \t\t\t\tidEpi\t\t\t: dados.idEpi\n\n// \t\t\t}\n\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FORMULARIO_EPI, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFomularioEpi: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \t//PERGUNTAS ----------------------------------------------------------------------------------------------------------\n\n// \tlistaPerguntas(token, idTipo, idFormulario) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaPerguntas\");\n// \t\tconst res = new Promise(resolve => {\n// \t\t\tconst jsonBody = {\n// \t\t\t\tidTipo: idTipo,\n// \t\t\t\tidFormulario: idFormulario\n// \t\t\t}\n// \t\t\tconst body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.PERGUNTA, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaPerguntas: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarPergunta(dados, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.salvarPergunta\");\n// \t\tlet res = new Promise(resolve => {\n\n// \t\t\tlet jsonBody = {\n\n// \t\t\t\tid: dados.id,\n// \t\t\t\tidFormulario: dados.idFormulario,\n// \t\t\t\tpergunta: dados.pergunta,\n// \t\t\t\tativa: dados.ativa,\n// \t\t\t\tordem: dados.ordem\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_PERGUNTA, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tlet credential = { credential: data.success }\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarPerguna: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tlistaExemplos(idPergunta, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaExemplos\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {idPergunta: idPergunta}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.EXEMPLO, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaExemplos: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarExemplo(dados, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.salvarExemplo\");\n// \t\tlet res = new Promise(resolve => {\n\n// \t\t\tlet jsonBody = dados;\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_EXEMPLO, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tlet credential = { credential: data.success }\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarPerguna: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// //GUIA DE SEGURANCA --------------------------------------------------------------------------------\n\n// listaGuiaSeguranca(token){\n\n// \tthis.configureTokenHeader(token);\n\n// \tconsole.log(\"RemoteServiceProvider.listaGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n// \t\tlet jsonBody = {}\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaGuiaSeguranca: http.post');\n// \t\t\tconsole.log(error);\n// \t\t\tresolve(false);\n// \t\t});\n// \t});\n// \treturn res;\n// }\t\n\n// salvarGuiaSeguranca(dados,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.salvarGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: dados.id,\n// \t\t\ttitulo\t\t\t: dados.titulo,\n// \t\t\tconteudo\t\t: dados.conteudo\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA_SALVAR, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif(data.error){\n// \t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\tresolve(data.error);\n// \t\t\t}\n// \t\t\telse if(data.success){\n// \t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\tresolve(credential);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarUnidade: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n// deletarGuiaSeguranca(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.deletarGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA_DELETE, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif(data.error){\n// \t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\tresolve(data.error);\n// \t\t\t}\n// \t\t\telse if(data.success){\n// \t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\tresolve(credential);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.deletarGuiaSeguranca: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n\n// listaCheckListUsuario(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.listaCheckListUsuario\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tidUsuario\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.LISTA_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n\t\t\t\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaCheckListUsuario: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n// reenvioCheckList(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.reenvioCheckList\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.REENVIO_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.reenvioCheckList: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Headers } from '@angular/http';\nimport { BASE_URL,  ServiceURL} from './routes'\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class RemoteServiceFuncionariosProvider {\n\tprivate headers;\n\tprivate httpOptions;\n\tprivate headersLocal;\n\tprivate httpOptionsLocal;\n\tprivate tokenHttpOptions;\n\t\n\n\n\t\n  \tconstructor(public http: Http) {\n\t\t\tconsole.log('Hello RemoteServiceProvider Provider remote-service');\n\t\t\tthis.headers = new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t});\n\t\t\tthis.httpOptions = new RequestOptions({\n\t\t\t\theaders: this.headers\n\t\t\t});\n\n\t\t\tthis.headersLocal = new Headers({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n\t\t\t});\n\t\t\tthis.httpOptionsLocal = new RequestOptions({\n\t\t\t\theaders: this.headersLocal\n\t\t\t});\n  \t}\n\t\n\n\tprivate configureTokenHeader(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Accept': 'application/json;',\n\t\t\t'Authorization': 'Bearer ' + token,\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\tprivate configureTokenHeaderForm(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Authorization': 'Bearer ' + token\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\n\n\n\tall(token){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tthis.http.get(ServiceURL.FUNCIONARIO, this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tadd(token,dados){\n\n\t\t\n\t\tthis.configureTokenHeaderForm(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tconst formData: FormData = new FormData();\n\t\t\tformData.append('nome', dados.nome);\n\t\t\tformData.append('idUnidade', dados.idUnidade);\n\t\t\tformData.append('rg', dados.rg);\n\t\t\tformData.append('emissor', dados.emissor);\n\t\t\tformData.append('dataAdmissao', dados.dataAdmissao);\n\t\t\tformData.append('dataNascimento', dados.dataNascimento);\n\t\t\tformData.append('dataVencimentoAso', dados.dataVencimentoAso);\n\t\t\tformData.append('cnh', dados.cnh);\n\t\t\tformData.append('categoriaCnh', dados.categoriaCnh);\n\t\t\tformData.append('idTipoSaguinio', dados.idTipoSaguinio);\n\t\t\tformData.append('idCargo', dados.idCargo);\n\t\t\tformData.append('tercerizado', dados.tercerizado);\n\t\t\tformData.append('empresaTerceira', dados.empresaTerceira);\n\t\t\tformData.append('status', dados.status);\n\t\t\tformData.append('foto', dados.foto);\n\n\t\t\tthis.http.post(ServiceURL.FUNCIONARIO, formData,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tupdate(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\n\t\t\tthis.http.put(ServiceURL.FUNCIONARIO, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tbyUnidade(idUnidade,token){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tthis.http.get(`${ServiceURL.FUNCIONARIO}?idUnidade=${idUnidade}`, this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Headers } from '@angular/http';\nimport { BASE_URL,  ServiceURL} from './routes'\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class RemoteServicePerfilProvider {\n\tprivate headers;\n\tprivate httpOptions;\n\tprivate headersLocal;\n\tprivate httpOptionsLocal;\n\tprivate tokenHttpOptions;\n\t\n\n\n\t\n  \tconstructor(public http: Http) {\n\t\t\tconsole.log('Hello RemoteServiceProvider Provider remote-service');\n\t\t\tthis.headers = new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t});\n\t\t\tthis.httpOptions = new RequestOptions({\n\t\t\t\theaders: this.headers\n\t\t\t});\n\n\t\t\tthis.headersLocal = new Headers({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n\t\t\t});\n\t\t\tthis.httpOptionsLocal = new RequestOptions({\n\t\t\t\theaders: this.headersLocal\n\t\t\t});\n  \t}\n\t\n\n\tprivate configureTokenHeader(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Accept': 'application/json;',\n\t\t\t'Authorization': 'Bearer ' + token,\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\n\tall(token){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tthis.http.get(ServiceURL.PERFIL, this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tadd(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\t\t\tthis.http.post(ServiceURL.PERFIL, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tupdate(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\t\t\tthis.http.put(ServiceURL.PERFIL, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\t\n\n\t// usuarioIncluir(dados,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioIncluir\");\n\t// \tlet res = new Promise(resolve => {\n\n\t// \t\tlet jsonBody = {\n\n\t// \t\t\tid\t\t\t: dados.id,\n\t// \t\t\tname\t\t: dados.name,\n\t// \t\t\temail\t\t: dados.email,\n\t// \t\t\tpassword\t:'',\n\t// \t\t\tc_password\t:'',\n\t// \t\t\tperfil\t\t:dados.idPerfil,\n\t// \t\t\tidEmpresaPrincipal :dados.idEmpresaPrincipal,\n\t// \t\t\tsenhaTemporaria\t\t: 1,\n\t// \t\t\tempresa: dados.empresa,\n\t// \t\t\tativo\t\t:0\n\n\t// \t\t}\t\t\t\n\n\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_CADASTRAR, body, this.httpOptions).subscribe((response) => {\n\t// \t\t//this.http.get(ServiceURL.LOGIN, this.httpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioIncluir: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n\n\t// usuarioStatus(id,ativo,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioEsqueci\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\n\t// \t\t\tid\t\t\t: id,\n\t// \t\t\tativo\t\t: ativo\n\n\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_STATUS, body, this.tokenHttpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioEsqueci: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\t\n\n\t// novaSenha(email: String, password: String, password_new: String){\n\t// \tconsole.log(\"RemoteServiceProvider.novaSenha\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\t// \t\t\temail: email,\n\t// \t\t\tpassword: password,\n\t// \t\t\tpassword_new: password_new\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_NOVA_SENHA, body, this.httpOptions).subscribe((response) => {\n\t\t\t\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success, token: data.success.token}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.novaSenha: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n\n\n\n\t// usuarioEsqueci(email,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioEsqueci\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\t// \t\t\temail\t\t: email\n\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_ESQUECI, body, this.httpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioEsqueci: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n// \tusuarioDeletar(id,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.usuarioDeletar\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: id\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.USUARIO_DELETE, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioDeletar: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// //tipo checklist --------------------------------------------------------------------------------\n\n// \tlistaTipoCheckList(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaTipoCheckList\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.TIPOS_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaTipoCheckList: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarCheckList(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarCheckList\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t: dados.id,\n// \t\t\t\tnome\t: dados.nome,\n// \t\t\t\ticone\t: dados.icone,\n// \t\t\t\tativa\t: dados.ativa\n\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_TIPOS_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t//this.http.get(ServiceURL.LOGIN, this.httpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarCheckList: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n\n// \t//UNIDADES --------------------------------------------------------------------------------\n\n// \tlistaUnidades(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaUnidades\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.UNIDADES, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaUnidades: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// \tsalvarUnidade(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarUnidade\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidPais\t\t\t: dados.idPais,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\tnomeFantasia\t: dados.nomeFantasia,\n// \t\t\t\tcnpj\t\t\t: dados.cnpj,\n// \t\t\t\tendereco\t\t: dados.endereco,\n// \t\t\t\tcidade\t\t\t: dados.cidade,\n// \t\t\t\tnumero\t\t\t: dados.numero,\n// \t\t\t\tcep\t\t\t\t: dados.cep,\n// \t\t\t\tbairro\t\t\t: dados.bairro,\n// \t\t\t\testado\t\t\t: dados.estado,\n// \t\t\t\tgrauRisco\t\t: dados.grauRisco,\n// \t\t\t\tativa\t\t\t: dados.ativa\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_UNIDADES, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarUnidade: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\t\n\n// \tlistaFuncionario(idUnidade,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.listaFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tidUnidade\t\t: idUnidade\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\t\n\n\n// \tsalvarFuncionario(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidUnidade\t\t: dados.idUnidade,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\temail\t\t\t: dados.email,\n// \t\t\t\tidCorp\t\t\t: dados.idCorp\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tdeletarFuncionario(id,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.deletarFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: id\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.DELETAR_FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.deletarFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// \t//FORMULARIOS ----------------------------------------------------------------------------------------------------------\n\n// \tlistaFormularios(token, idTipo = null){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaFormularios\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tif (idTipo){\n// \t\t\t\tjsonBody = { idTipo: idTipo };\n// \t\t\t} \n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.FORMULARIO, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaFormularios: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarFormulario(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFormulario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidTipo\t\t\t: dados.idTipo,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\tativa\t\t\t: dados.ativa\n\n// \t\t\t}\n\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FORMULARIO, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFormulario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tlistaEpis(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaEpis\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.LISTA_EPI, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaEpis: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n// \tsalvarFomularioEpi(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFomularioEpi\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tidFormulario\t: dados.idFormulario,\n// \t\t\t\tidEpi\t\t\t: dados.idEpi\n\n// \t\t\t}\n\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FORMULARIO_EPI, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFomularioEpi: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \t//PERGUNTAS ----------------------------------------------------------------------------------------------------------\n\n// \tlistaPerguntas(token, idTipo, idFormulario) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaPerguntas\");\n// \t\tconst res = new Promise(resolve => {\n// \t\t\tconst jsonBody = {\n// \t\t\t\tidTipo: idTipo,\n// \t\t\t\tidFormulario: idFormulario\n// \t\t\t}\n// \t\t\tconst body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.PERGUNTA, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaPerguntas: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarPergunta(dados, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.salvarPergunta\");\n// \t\tlet res = new Promise(resolve => {\n\n// \t\t\tlet jsonBody = {\n\n// \t\t\t\tid: dados.id,\n// \t\t\t\tidFormulario: dados.idFormulario,\n// \t\t\t\tpergunta: dados.pergunta,\n// \t\t\t\tativa: dados.ativa,\n// \t\t\t\tordem: dados.ordem\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_PERGUNTA, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tlet credential = { credential: data.success }\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarPerguna: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tlistaExemplos(idPergunta, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaExemplos\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {idPergunta: idPergunta}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.EXEMPLO, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaExemplos: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarExemplo(dados, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.salvarExemplo\");\n// \t\tlet res = new Promise(resolve => {\n\n// \t\t\tlet jsonBody = dados;\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_EXEMPLO, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tlet credential = { credential: data.success }\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarPerguna: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// //GUIA DE SEGURANCA --------------------------------------------------------------------------------\n\n// listaGuiaSeguranca(token){\n\n// \tthis.configureTokenHeader(token);\n\n// \tconsole.log(\"RemoteServiceProvider.listaGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n// \t\tlet jsonBody = {}\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaGuiaSeguranca: http.post');\n// \t\t\tconsole.log(error);\n// \t\t\tresolve(false);\n// \t\t});\n// \t});\n// \treturn res;\n// }\t\n\n// salvarGuiaSeguranca(dados,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.salvarGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: dados.id,\n// \t\t\ttitulo\t\t\t: dados.titulo,\n// \t\t\tconteudo\t\t: dados.conteudo\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA_SALVAR, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif(data.error){\n// \t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\tresolve(data.error);\n// \t\t\t}\n// \t\t\telse if(data.success){\n// \t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\tresolve(credential);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarUnidade: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n// deletarGuiaSeguranca(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.deletarGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA_DELETE, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif(data.error){\n// \t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\tresolve(data.error);\n// \t\t\t}\n// \t\t\telse if(data.success){\n// \t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\tresolve(credential);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.deletarGuiaSeguranca: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n\n// listaCheckListUsuario(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.listaCheckListUsuario\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tidUsuario\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.LISTA_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n\t\t\t\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaCheckListUsuario: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n// reenvioCheckList(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.reenvioCheckList\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.REENVIO_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.reenvioCheckList: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Headers } from '@angular/http';\nimport { BASE_URL,  ServiceURL} from './routes'\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class RemoteServiceTipoSanguinioProvider {\n\tprivate headers;\n\tprivate httpOptions;\n\tprivate headersLocal;\n\tprivate httpOptionsLocal;\n\tprivate tokenHttpOptions;\n\t\n\n\n\t\n  \tconstructor(public http: Http) {\n\t\t\tconsole.log('Hello RemoteServiceProvider Provider remote-service');\n\t\t\tthis.headers = new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t});\n\t\t\tthis.httpOptions = new RequestOptions({\n\t\t\t\theaders: this.headers\n\t\t\t});\n\n\t\t\tthis.headersLocal = new Headers({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n\t\t\t});\n\t\t\tthis.httpOptionsLocal = new RequestOptions({\n\t\t\t\theaders: this.headersLocal\n\t\t\t});\n  \t}\n\t\n\n\tprivate configureTokenHeader(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Accept': 'application/json;',\n\t\t\t'Authorization': 'Bearer ' + token,\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\tprivate configureTokenHeaderForm(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Authorization': 'Bearer ' + token\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\n\n\n\tall(token){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tthis.http.get(ServiceURL.TIPO_SANGUINIO, this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tadd(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\n\t\t\tthis.http.post(ServiceURL.TIPO_SANGUINIO, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tupdate(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\n\t\t\tthis.http.put(ServiceURL.TIPO_SANGUINIO, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Headers } from '@angular/http';\nimport { BASE_URL,  ServiceURL} from './routes'\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class RemoteServiceTreinamentoProvider {\n\tprivate headers;\n\tprivate httpOptions;\n\tprivate headersLocal;\n\tprivate httpOptionsLocal;\n\tprivate tokenHttpOptions;\n\t\n\n\n\t\n  \tconstructor(public http: Http) {\n\t\t\tconsole.log('Hello RemoteServiceProvider Provider remote-service');\n\t\t\tthis.headers = new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t});\n\t\t\tthis.httpOptions = new RequestOptions({\n\t\t\t\theaders: this.headers\n\t\t\t});\n\n\t\t\tthis.headersLocal = new Headers({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n\t\t\t});\n\t\t\tthis.httpOptionsLocal = new RequestOptions({\n\t\t\t\theaders: this.headersLocal\n\t\t\t});\n  \t}\n\t\n\n\tprivate configureTokenHeader(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Accept': 'application/json;',\n\t\t\t'Authorization': 'Bearer ' + token,\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\tprivate configureTokenHeaderForm(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Authorization': 'Bearer ' + token\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\n\n\n\tall(token){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tthis.http.get(ServiceURL.TREINAMENTO, this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tadd(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\n\t\t\tthis.http.post(ServiceURL.TREINAMENTO, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tupdate(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\n\t\t\tthis.http.put(ServiceURL.TREINAMENTO, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Headers } from '@angular/http';\nimport { BASE_URL,  ServiceURL} from './routes'\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class RemoteServiceUnidadeProvider {\n\tprivate headers;\n\tprivate httpOptions;\n\tprivate headersLocal;\n\tprivate httpOptionsLocal;\n\tprivate tokenHttpOptions;\n\t\n\n\n\t\n  \tconstructor(public http: Http) {\n\t\t\tconsole.log('Hello RemoteServiceProvider Provider remote-service');\n\t\t\tthis.headers = new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t});\n\t\t\tthis.httpOptions = new RequestOptions({\n\t\t\t\theaders: this.headers\n\t\t\t});\n\n\t\t\tthis.headersLocal = new Headers({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n\t\t\t});\n\t\t\tthis.httpOptionsLocal = new RequestOptions({\n\t\t\t\theaders: this.headersLocal\n\t\t\t});\n  \t}\n\t\n\n\tprivate configureTokenHeader(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Accept': 'application/json;',\n\t\t\t'Authorization': 'Bearer ' + token,\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\tprivate configureTokenHeaderForm(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Authorization': 'Bearer ' + token\n\t\t});\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\n\n\n\tall(token){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tthis.http.get(ServiceURL.UNIDADE, this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tadd(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\n\t\t\tthis.http.post(ServiceURL.UNIDADE, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tupdate(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\n\t\t\tthis.http.put(ServiceURL.UNIDADE, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tfuncionarios(idUnidade,token){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tthis.http.get(`${ServiceURL.FUNCIONARIO_BY_UNIDADE}?idUnidade=${idUnidade}`, this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Headers } from '@angular/http';\nimport { BASE_URL,  ServiceURL} from './routes'\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class RemoteServiceUsersProvider {\n\tprivate headers;\n\tprivate httpOptions;\n\tprivate headersLocal;\n\tprivate httpOptionsLocal;\n\tprivate tokenHttpOptions;\n\t\n\n\n\t\n  \tconstructor(public http: Http) {\n\t\t\tconsole.log('Hello RemoteServiceProvider Provider remote-service');\n\t\t\tthis.headers = new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t});\n\t\t\tthis.httpOptions = new RequestOptions({\n\t\t\t\theaders: this.headers\n\t\t\t});\n\n\t\t\tthis.headersLocal = new Headers({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n\t\t\t});\n\t\t\tthis.httpOptionsLocal = new RequestOptions({\n\t\t\t\theaders: this.headersLocal\n\t\t\t});\n  \t}\n\t\n\n\tprivate configureTokenHeader(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Accept': 'application/json;',\n\t\t\t'Authorization': 'Bearer ' + token,\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\n\tusuarioLista(token){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tthis.http.get(ServiceURL.USERS, this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tincluir(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\t\t\tthis.http.post(ServiceURL.USERS, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tupdate(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\t\t\tthis.http.put(ServiceURL.USERS, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\n\tconfig(token,dados){\n\n\t\tthis.configureTokenHeader(token);\n\n\t\tlet res = new Promise((resolve, reject) => {\n\t\n\t\t\tlet body = JSON.stringify(dados);\n\t\t\tthis.http.post(ServiceURL.USERS_CONFIG, body,this.tokenHttpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tif (data.error) {\n\t\t\t\t\t//Token Inválido\n\t\t\t\t\treject(false);\n\t\t\t\t}\n\t\t\t\telse if (data.success) {\n\t\t\t\t\tresolve(data.success);\n\t\t\t\t}\n\n\t\t\t}, error => {\n\t\t\t\t\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\t\n\n\t// usuarioIncluir(dados,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioIncluir\");\n\t// \tlet res = new Promise(resolve => {\n\n\t// \t\tlet jsonBody = {\n\n\t// \t\t\tid\t\t\t: dados.id,\n\t// \t\t\tname\t\t: dados.name,\n\t// \t\t\temail\t\t: dados.email,\n\t// \t\t\tpassword\t:'',\n\t// \t\t\tc_password\t:'',\n\t// \t\t\tperfil\t\t:dados.idPerfil,\n\t// \t\t\tidEmpresaPrincipal :dados.idEmpresaPrincipal,\n\t// \t\t\tsenhaTemporaria\t\t: 1,\n\t// \t\t\tempresa: dados.empresa,\n\t// \t\t\tativo\t\t:0\n\n\t// \t\t}\t\t\t\n\n\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_CADASTRAR, body, this.httpOptions).subscribe((response) => {\n\t// \t\t//this.http.get(ServiceURL.LOGIN, this.httpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioIncluir: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n\n\t// usuarioStatus(id,ativo,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioEsqueci\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\n\t// \t\t\tid\t\t\t: id,\n\t// \t\t\tativo\t\t: ativo\n\n\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_STATUS, body, this.tokenHttpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioEsqueci: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\t\n\n\t// novaSenha(email: String, password: String, password_new: String){\n\t// \tconsole.log(\"RemoteServiceProvider.novaSenha\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\t// \t\t\temail: email,\n\t// \t\t\tpassword: password,\n\t// \t\t\tpassword_new: password_new\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_NOVA_SENHA, body, this.httpOptions).subscribe((response) => {\n\t\t\t\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success, token: data.success.token}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.novaSenha: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n\n\n\n\t// usuarioEsqueci(email,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioEsqueci\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\t// \t\t\temail\t\t: email\n\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_ESQUECI, body, this.httpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioEsqueci: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n// \tusuarioDeletar(id,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.usuarioDeletar\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: id\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.USUARIO_DELETE, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioDeletar: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// //tipo checklist --------------------------------------------------------------------------------\n\n// \tlistaTipoCheckList(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaTipoCheckList\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.TIPOS_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaTipoCheckList: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarCheckList(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarCheckList\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t: dados.id,\n// \t\t\t\tnome\t: dados.nome,\n// \t\t\t\ticone\t: dados.icone,\n// \t\t\t\tativa\t: dados.ativa\n\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_TIPOS_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t//this.http.get(ServiceURL.LOGIN, this.httpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarCheckList: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n\n// \t//UNIDADES --------------------------------------------------------------------------------\n\n// \tlistaUnidades(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaUnidades\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.UNIDADES, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaUnidades: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// \tsalvarUnidade(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarUnidade\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidPais\t\t\t: dados.idPais,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\tnomeFantasia\t: dados.nomeFantasia,\n// \t\t\t\tcnpj\t\t\t: dados.cnpj,\n// \t\t\t\tendereco\t\t: dados.endereco,\n// \t\t\t\tcidade\t\t\t: dados.cidade,\n// \t\t\t\tnumero\t\t\t: dados.numero,\n// \t\t\t\tcep\t\t\t\t: dados.cep,\n// \t\t\t\tbairro\t\t\t: dados.bairro,\n// \t\t\t\testado\t\t\t: dados.estado,\n// \t\t\t\tgrauRisco\t\t: dados.grauRisco,\n// \t\t\t\tativa\t\t\t: dados.ativa\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_UNIDADES, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarUnidade: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\t\n\n// \tlistaFuncionario(idUnidade,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.listaFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tidUnidade\t\t: idUnidade\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\t\n\n\n// \tsalvarFuncionario(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidUnidade\t\t: dados.idUnidade,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\temail\t\t\t: dados.email,\n// \t\t\t\tidCorp\t\t\t: dados.idCorp\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tdeletarFuncionario(id,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.deletarFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: id\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.DELETAR_FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.deletarFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// \t//FORMULARIOS ----------------------------------------------------------------------------------------------------------\n\n// \tlistaFormularios(token, idTipo = null){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaFormularios\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tif (idTipo){\n// \t\t\t\tjsonBody = { idTipo: idTipo };\n// \t\t\t} \n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.FORMULARIO, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaFormularios: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarFormulario(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFormulario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidTipo\t\t\t: dados.idTipo,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\tativa\t\t\t: dados.ativa\n\n// \t\t\t}\n\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FORMULARIO, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFormulario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tlistaEpis(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaEpis\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.LISTA_EPI, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaEpis: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n// \tsalvarFomularioEpi(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFomularioEpi\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tidFormulario\t: dados.idFormulario,\n// \t\t\t\tidEpi\t\t\t: dados.idEpi\n\n// \t\t\t}\n\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FORMULARIO_EPI, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFomularioEpi: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \t//PERGUNTAS ----------------------------------------------------------------------------------------------------------\n\n// \tlistaPerguntas(token, idTipo, idFormulario) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaPerguntas\");\n// \t\tconst res = new Promise(resolve => {\n// \t\t\tconst jsonBody = {\n// \t\t\t\tidTipo: idTipo,\n// \t\t\t\tidFormulario: idFormulario\n// \t\t\t}\n// \t\t\tconst body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.PERGUNTA, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaPerguntas: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarPergunta(dados, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.salvarPergunta\");\n// \t\tlet res = new Promise(resolve => {\n\n// \t\t\tlet jsonBody = {\n\n// \t\t\t\tid: dados.id,\n// \t\t\t\tidFormulario: dados.idFormulario,\n// \t\t\t\tpergunta: dados.pergunta,\n// \t\t\t\tativa: dados.ativa,\n// \t\t\t\tordem: dados.ordem\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_PERGUNTA, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tlet credential = { credential: data.success }\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarPerguna: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tlistaExemplos(idPergunta, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaExemplos\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {idPergunta: idPergunta}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.EXEMPLO, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaExemplos: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarExemplo(dados, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.salvarExemplo\");\n// \t\tlet res = new Promise(resolve => {\n\n// \t\t\tlet jsonBody = dados;\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_EXEMPLO, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tlet credential = { credential: data.success }\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarPerguna: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// //GUIA DE SEGURANCA --------------------------------------------------------------------------------\n\n// listaGuiaSeguranca(token){\n\n// \tthis.configureTokenHeader(token);\n\n// \tconsole.log(\"RemoteServiceProvider.listaGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n// \t\tlet jsonBody = {}\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaGuiaSeguranca: http.post');\n// \t\t\tconsole.log(error);\n// \t\t\tresolve(false);\n// \t\t});\n// \t});\n// \treturn res;\n// }\t\n\n// salvarGuiaSeguranca(dados,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.salvarGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: dados.id,\n// \t\t\ttitulo\t\t\t: dados.titulo,\n// \t\t\tconteudo\t\t: dados.conteudo\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA_SALVAR, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif(data.error){\n// \t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\tresolve(data.error);\n// \t\t\t}\n// \t\t\telse if(data.success){\n// \t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\tresolve(credential);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarUnidade: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n// deletarGuiaSeguranca(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.deletarGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA_DELETE, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif(data.error){\n// \t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\tresolve(data.error);\n// \t\t\t}\n// \t\t\telse if(data.success){\n// \t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\tresolve(credential);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.deletarGuiaSeguranca: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n\n// listaCheckListUsuario(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.listaCheckListUsuario\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tidUsuario\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.LISTA_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n\t\t\t\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaCheckListUsuario: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n// reenvioCheckList(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.reenvioCheckList\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.REENVIO_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.reenvioCheckList: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Headers } from '@angular/http';\nimport { BASE_URL,  ServiceURL} from './routes'\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class RemoteServiceProvider {\n\tprivate headers;\n\tprivate httpOptions;\n\tprivate headersLocal;\n\tprivate httpOptionsLocal;\n\tprivate tokenHttpOptions;\n\t\n\n\n\t\n  \tconstructor(public http: Http) {\n\t\t\tconsole.log('Hello RemoteServiceProvider Provider remote-service');\n\t\t\tthis.headers = new Headers({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t});\n\t\t\tthis.httpOptions = new RequestOptions({\n\t\t\t\theaders: this.headers\n\t\t\t});\n\n\t\t\tthis.headersLocal = new Headers({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n\t\t\t});\n\t\t\tthis.httpOptionsLocal = new RequestOptions({\n\t\t\t\theaders: this.headersLocal\n\t\t\t});\n  \t}\n\t\n\tdoLogin(email: String, password: String){\n\t\tconsole.log(\"RemoteServiceProvider.doLogin\");\n\t\tlet res = new Promise(resolve => {\n\t\t\tlet jsonBody = {\n\t\t\t\temail: email,\n\t\t\t\tpassword: password\n\t\t\t}\n\t\t\tlet body = JSON.stringify(jsonBody);\n\t\t\tthis.http.post(ServiceURL.LOGIN, body, this.httpOptions).subscribe((response) => {\n\t\t\t//this.http.get(ServiceURL.LOGIN, this.httpOptions).subscribe((response) => {\n\t\t\t\tlet data = response.json();\n\t\t\t\tconsole.log(data);\n\n\t\t\t\tresolve(data);\n\t\t\t\t\n\t\t\t}, error => {\n\t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.doLogin: http.post'+ ServiceURL.LOGIN);\n\t\t\t\t// console.log(JSON.stringify(error));\n\t\t\t\tresolve(error.json());\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n\tprivate configureTokenHeader(token){\n\t\tlet tokenHeader = new Headers({\n\t\t\t'Accept': 'application/json;',\n\t\t\t'Authorization': 'Bearer ' + token,\n\t\t\t'Content-Type': 'application/json'\n\t\t});\n\n\n\n\t\tthis.tokenHttpOptions = new RequestOptions({\n\t\t\theaders: tokenHeader\n\t\t});\n\n\n\t}\n\n\t// usuarioLista(token){\n\n\t// \tthis.configureTokenHeader(token);\n\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioLista\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_LISTA, body, this.tokenHttpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif (data.error) {\n\t// \t\t\t\t//Token Inválido\n\t// \t\t\t\tresolve(false);\n\t// \t\t\t}\n\t// \t\t\telse if (data.success) {\n\t// \t\t\t\tresolve(data.success);\n\t// \t\t\t}\n\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioLista: http.post');\n\t// \t\t\tconsole.log(error);\n\t// \t\t\tresolve(false);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n\t\n\n\t// usuarioIncluir(dados,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioIncluir\");\n\t// \tlet res = new Promise(resolve => {\n\n\t// \t\tlet jsonBody = {\n\n\t// \t\t\tid\t\t\t: dados.id,\n\t// \t\t\tname\t\t: dados.name,\n\t// \t\t\temail\t\t: dados.email,\n\t// \t\t\tpassword\t:'',\n\t// \t\t\tc_password\t:'',\n\t// \t\t\tperfil\t\t:dados.idPerfil,\n\t// \t\t\tidEmpresaPrincipal :dados.idEmpresaPrincipal,\n\t// \t\t\tsenhaTemporaria\t\t: 1,\n\t// \t\t\tempresa: dados.empresa,\n\t// \t\t\tativo\t\t:0\n\n\t// \t\t}\t\t\t\n\n\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_CADASTRAR, body, this.httpOptions).subscribe((response) => {\n\t// \t\t//this.http.get(ServiceURL.LOGIN, this.httpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioIncluir: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n\n\t// usuarioStatus(id,ativo,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioEsqueci\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\n\t// \t\t\tid\t\t\t: id,\n\t// \t\t\tativo\t\t: ativo\n\n\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_STATUS, body, this.tokenHttpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioEsqueci: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\t\n\n\t// novaSenha(email: String, password: String, password_new: String){\n\t// \tconsole.log(\"RemoteServiceProvider.novaSenha\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\t// \t\t\temail: email,\n\t// \t\t\tpassword: password,\n\t// \t\t\tpassword_new: password_new\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_NOVA_SENHA, body, this.httpOptions).subscribe((response) => {\n\t\t\t\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success, token: data.success.token}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.novaSenha: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n\n\n\n\t// usuarioEsqueci(email,token){\n\n\t// \tthis.configureTokenHeader(token);\n\t\t\n\t// \tconsole.log(\"RemoteServiceProvider.usuarioEsqueci\");\n\t// \tlet res = new Promise(resolve => {\n\t// \t\tlet jsonBody = {\n\t// \t\t\temail\t\t: email\n\n\t// \t\t}\n\t// \t\tlet body = JSON.stringify(jsonBody);\n\t// \t\tthis.http.post(ServiceURL.USUARIO_ESQUECI, body, this.httpOptions).subscribe((response) => {\n\t// \t\t\tlet data = response.json();\n\t// \t\t\tconsole.log(data);\n\t// \t\t\tif(data.error){\n\t// \t\t\t\t//Usuário ou senha inválidos\n\t// \t\t\t\tresolve(data.error);\n\t// \t\t\t}\n\t// \t\t\telse if(data.success){\n\t// \t\t\t\tlet credential = { credential: data.success}\n\t// \t\t\t\tresolve(credential);\n\t// \t\t\t}\n\t\t\t\t\n\t// \t\t}, error => {\n\t// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioEsqueci: http.post');\n\t// \t\t\tconsole.log(JSON.stringify(error));\n\t// \t\t\tresolve(error);\n\t// \t\t});\n\t// \t});\n\t// \treturn res;\n\t// }\n\n// \tusuarioDeletar(id,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.usuarioDeletar\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: id\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.USUARIO_DELETE, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.usuarioDeletar: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// //tipo checklist --------------------------------------------------------------------------------\n\n// \tlistaTipoCheckList(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaTipoCheckList\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.TIPOS_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaTipoCheckList: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarCheckList(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarCheckList\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t: dados.id,\n// \t\t\t\tnome\t: dados.nome,\n// \t\t\t\ticone\t: dados.icone,\n// \t\t\t\tativa\t: dados.ativa\n\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_TIPOS_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t//this.http.get(ServiceURL.LOGIN, this.httpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarCheckList: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n\n// \t//UNIDADES --------------------------------------------------------------------------------\n\n// \tlistaUnidades(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaUnidades\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.UNIDADES, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaUnidades: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// \tsalvarUnidade(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarUnidade\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidPais\t\t\t: dados.idPais,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\tnomeFantasia\t: dados.nomeFantasia,\n// \t\t\t\tcnpj\t\t\t: dados.cnpj,\n// \t\t\t\tendereco\t\t: dados.endereco,\n// \t\t\t\tcidade\t\t\t: dados.cidade,\n// \t\t\t\tnumero\t\t\t: dados.numero,\n// \t\t\t\tcep\t\t\t\t: dados.cep,\n// \t\t\t\tbairro\t\t\t: dados.bairro,\n// \t\t\t\testado\t\t\t: dados.estado,\n// \t\t\t\tgrauRisco\t\t: dados.grauRisco,\n// \t\t\t\tativa\t\t\t: dados.ativa\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_UNIDADES, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarUnidade: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\t\n\n// \tlistaFuncionario(idUnidade,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.listaFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tidUnidade\t\t: idUnidade\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\t\n\n\n// \tsalvarFuncionario(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidUnidade\t\t: dados.idUnidade,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\temail\t\t\t: dados.email,\n// \t\t\t\tidCorp\t\t\t: dados.idCorp\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tdeletarFuncionario(id,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.deletarFuncionario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: id\n\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.DELETAR_FUNCIONARIOS, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.deletarFuncionario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n\n// \t//FORMULARIOS ----------------------------------------------------------------------------------------------------------\n\n// \tlistaFormularios(token, idTipo = null){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaFormularios\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tif (idTipo){\n// \t\t\t\tjsonBody = { idTipo: idTipo };\n// \t\t\t} \n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.FORMULARIO, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaFormularios: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarFormulario(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFormulario\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tid\t\t\t\t: dados.id,\n// \t\t\t\tidTipo\t\t\t: dados.idTipo,\n// \t\t\t\tnome\t\t\t: dados.nome,\n// \t\t\t\tativa\t\t\t: dados.ativa\n\n// \t\t\t}\n\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FORMULARIO, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFormulario: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tlistaEpis(token){\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaEpis\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.LISTA_EPI, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaEpis: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n// \tsalvarFomularioEpi(dados,token){\n\n// \t\tthis.configureTokenHeader(token);\n\t\t\n// \t\tconsole.log(\"RemoteServiceProvider.salvarFomularioEpi\");\n// \t\tlet res = new Promise(resolve => {\n\t\t\t\n// \t\t\t let jsonBody = {\n\n// \t\t\t\tidFormulario\t: dados.idFormulario,\n// \t\t\t\tidEpi\t\t\t: dados.idEpi\n\n// \t\t\t}\n\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_FORMULARIO_EPI, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif(data.error){\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if(data.success){\n// \t\t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarFomularioEpi: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \t//PERGUNTAS ----------------------------------------------------------------------------------------------------------\n\n// \tlistaPerguntas(token, idTipo, idFormulario) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaPerguntas\");\n// \t\tconst res = new Promise(resolve => {\n// \t\t\tconst jsonBody = {\n// \t\t\t\tidTipo: idTipo,\n// \t\t\t\tidFormulario: idFormulario\n// \t\t\t}\n// \t\t\tconst body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.PERGUNTA, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaPerguntas: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarPergunta(dados, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.salvarPergunta\");\n// \t\tlet res = new Promise(resolve => {\n\n// \t\t\tlet jsonBody = {\n\n// \t\t\t\tid: dados.id,\n// \t\t\t\tidFormulario: dados.idFormulario,\n// \t\t\t\tpergunta: dados.pergunta,\n// \t\t\t\tativa: dados.ativa,\n// \t\t\t\tordem: dados.ordem\n// \t\t\t}\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_PERGUNTA, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tlet credential = { credential: data.success }\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarPerguna: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tlistaExemplos(idPergunta, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.listaExemplos\");\n// \t\tlet res = new Promise(resolve => {\n// \t\t\tlet jsonBody = {idPergunta: idPergunta}\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.EXEMPLO, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Token Inválido\n// \t\t\t\t\tresolve(false);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tresolve(data.success);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaExemplos: http.post');\n// \t\t\t\tconsole.log(error);\n// \t\t\t\tresolve(false);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// \tsalvarExemplo(dados, token) {\n\n// \t\tthis.configureTokenHeader(token);\n\n// \t\tconsole.log(\"RemoteServiceProvider.salvarExemplo\");\n// \t\tlet res = new Promise(resolve => {\n\n// \t\t\tlet jsonBody = dados;\n\n// \t\t\tlet body = JSON.stringify(jsonBody);\n// \t\t\tthis.http.post(ServiceURL.SALVAR_EXEMPLO, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\t\tlet data = response.json();\n// \t\t\t\tconsole.log(data);\n// \t\t\t\tif (data.error) {\n// \t\t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\t\tresolve(data.error);\n// \t\t\t\t}\n// \t\t\t\telse if (data.success) {\n// \t\t\t\t\tlet credential = { credential: data.success }\n// \t\t\t\t\tresolve(credential);\n// \t\t\t\t}\n\n// \t\t\t}, error => {\n// \t\t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarPerguna: http.post');\n// \t\t\t\tconsole.log(JSON.stringify(error));\n// \t\t\t\tresolve(error);\n// \t\t\t});\n// \t\t});\n// \t\treturn res;\n// \t}\n\n// //GUIA DE SEGURANCA --------------------------------------------------------------------------------\n\n// listaGuiaSeguranca(token){\n\n// \tthis.configureTokenHeader(token);\n\n// \tconsole.log(\"RemoteServiceProvider.listaGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n// \t\tlet jsonBody = {}\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA, body, this.tokenHttpOptions).subscribe((response) => {\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaGuiaSeguranca: http.post');\n// \t\t\tconsole.log(error);\n// \t\t\tresolve(false);\n// \t\t});\n// \t});\n// \treturn res;\n// }\t\n\n// salvarGuiaSeguranca(dados,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.salvarGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: dados.id,\n// \t\t\ttitulo\t\t\t: dados.titulo,\n// \t\t\tconteudo\t\t: dados.conteudo\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA_SALVAR, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif(data.error){\n// \t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\tresolve(data.error);\n// \t\t\t}\n// \t\t\telse if(data.success){\n// \t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\tresolve(credential);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.salvarUnidade: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n// deletarGuiaSeguranca(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.deletarGuiaSeguranca\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.GUIA_SEGURANCA_DELETE, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif(data.error){\n// \t\t\t\t//Usuário ou senha inválidos\n// \t\t\t\tresolve(data.error);\n// \t\t\t}\n// \t\t\telse if(data.success){\n// \t\t\t\tlet credential = { credential: data.success}\n// \t\t\t\tresolve(credential);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.deletarGuiaSeguranca: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n\n// listaCheckListUsuario(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.listaCheckListUsuario\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tidUsuario\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.LISTA_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n\t\t\t\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.listaCheckListUsuario: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n// reenvioCheckList(id,token){\n\n// \tthis.configureTokenHeader(token);\n\t\n// \tconsole.log(\"RemoteServiceProvider.reenvioCheckList\");\n// \tlet res = new Promise(resolve => {\n\t\t\n// \t\t let jsonBody = {\n\n// \t\t\tid\t\t\t\t: id\n\n// \t\t}\n\n// \t\tlet body = JSON.stringify(jsonBody);\n// \t\tthis.http.post(ServiceURL.REENVIO_CHECKLIST, body, this.tokenHttpOptions).subscribe((response) => {\n\n// \t\t\tlet data = response.json();\n// \t\t\tconsole.log(data);\n// \t\t\tif (data.error) {\n// \t\t\t\t//Token Inválido\n// \t\t\t\tresolve(false);\n// \t\t\t}\n// \t\t\telse if (data.success) {\n// \t\t\t\tresolve(data.success);\n// \t\t\t}\n\t\t\t\n// \t\t}, error => {\n// \t\t\tconsole.log('[ERROR] RemoteServiceProvider.reenvioCheckList: http.post');\n// \t\t\tconsole.log(JSON.stringify(error));\n// \t\t\tresolve(error);\n// \t\t});\n// \t});\n// \treturn res;\n// }\n\n\n}\n","\n\n\n/*\nConstantes das URLs dos Serviços Produção\n*/\n\n\nexport function BASE_URL () {\n\n  let url;\n  if(window.location.origin == `${window.location.protocol}//140.238.187.249:8081`){\n    url = `${window.location.protocol}//140.238.187.249:3030`;\n\n  }else{\n\n    url = window.location.origin == 'http://localhost:8081' \n              ? `http://localhost:3030` \n              : `${window.location.protocol}//URL_HOMOLOGACAO` ;\n  }\n\n  return url;\n\n}\n\n// export const PAIS = 1;\n\nexport class ServiceURL {\n    public static LOGIN = BASE_URL() + \"/auth\";\n    public static USERS = BASE_URL() + \"/api/v1/users\";\n    public static USERS_CONFIG = BASE_URL() + \"/api/v1/users-config\";\n    public static PERFIL = BASE_URL() + \"/api/v1/perfil\";\n    public static EMPRESA = BASE_URL() + \"/api/v1/empresa\";\n    public static UNIDADES_BY_EMPRESAS = BASE_URL() + \"/api/v1/unidadesByEmpresa\";\n    public static UNIDADE = BASE_URL() + \"/api/v1/unidade\";\n    public static CARGO = BASE_URL() + \"/api/v1/cargo\";\n    public static FUNCIONARIO_BY_UNIDADE = BASE_URL() + \"/api/v1/unidade/funcionario\";\n    public static FUNCIONARIO = BASE_URL() + \"/api/v1/funcionario\";\n    public static TIPO_SANGUINIO = BASE_URL() + \"/api/v1/tipo-sanguinio\";\n    public static TREINAMENTO = BASE_URL() + \"/api/v1/treinamento\";\n    \n\n    \n    // public static VALIDA_TOKEN = BASE_URL() + \"/api/get-details\";\n    \n    \n \n\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","/*!\n\n=========================================================\n* Material Dashboard Angular - v2.4.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-angular2\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-angular2/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":"webpack:///"}